datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id     Int    @default(autoincrement()) @id
  name   String
  user   User   @relation("UserHasProfile", fields: [userId], references: [id])
  userId Int
}

model User {
  id      Int      @default(autoincrement()) @id
  profile Profile? @relation("UserHasProfile")

  // Friends
  friends  User[] @relation("UserFriendsUser", references: [id])
  friendOf User[] @relation("UserFriendsUser", references: [id])

  // Posts
  posts      Post[] @relation("UserAuthorsPost")
  likedPosts Post[] @relation("UserLikesPost")

  // Comments
  comments      Comment[] @relation("UserAuthorsComment")
  likedComments Comment[] @relation("UserLikesComment")
}

model Post {
  id        Int      @default(autoincrement()) @id
  content   String
  createdAt DateTime @default(now())

  author   User @relation("UserAuthorsPost", fields: [authorId], references: [id])
  authorId Int

  likedBy User[] @relation("UserLikesPost", references: [id])

  comments Comment[] @relation("PostHasComment")
}

model Comment {
  id        Int      @default(autoincrement()) @id
  content   String
  createdAt DateTime @default(now())

  post   Post @relation("PostHasComment", fields: [postId], references: [id])
  postId Int

  parentComment   Comment?  @relation("CommentParentsComment", fields: [parentCommentId])
  parentCommentId Int?
  childComments   Comment[] @relation("CommentParentsComment")

  author   User @relation("UserAuthorsComment", fields: [authorId], references: [id])
  authorId Int

  likedBy User[] @relation("UserLikesComment", references: [id])
}
